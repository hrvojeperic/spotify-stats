{"version":3,"sources":["images/spotify_logo.png","components/Login.js","components/navbar/NavbarElements.js","components/navbar/index.js","pages/Home.js","pages/TopSongs.js","pages/TopArtists.js","pages/TopGenres.js","pages/TopRecommendations.js","pages/Graphs.js","utilities/token.js","utilities/requests.js","images/default_image.jpg","images/acdc.jpg","images/chuck_berry.jpg","images/led_zeppelin.jpg","images/avicii.jpg","images/blink_182.jpg","images/white_stripes.jpg","images/the_smashing_pumpkins.jpg","images/u2.jpg","images/rolling_stones.jpg","images/calvin_harris.jpg","images/dua_lipa.jpg","images/hardwell.jpg","images/marshmello.jpg","images/deorro.jpg","images/divine_fits.jpg","images/guns_n_roses.jpg","images/kid_cudi.jpg","images/mgmt.jpg","images/modest_mouse.jpg","images/swedish_house_mafia.jpg","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","style","color","width","background","height","margin","position","top","transform","alignItems","justifyContent","textAlign","fontSize","display","paddingTop","className","onClick","login","paddingRight","src","spotifyIcon","alt","verticalAlign","sample","isSignOut","isNoData","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","activeStyle","Home","console","log","fontFamily","userImage","borderRadius","border","marginLeft","marginTop","userName","followers","TopSongs","songStyle","minHeight","paddingBottom","photoStyle","nameStyle","alignContent","flexDirection","imageStyle","backgroundColor","photoInnerStyle","marginBottom","subHeaderStyle","Array","map","x","i","topSongImages","topSongNames","topSongArtistName","TopArtists","topArtistImages","topArtistNames","topArtistFollowers","TopGenres","topGenres","TopRecommendations","topRecommendationsImages","topRecommendations","topRecommendationsArtistName","Graphs","useState","setVisibility","setBarChartVisibility","treeMapArray","setTreeMapArray","setTest","subject","A","actualRadarData","setActualRadarData","dummyRadarData","radarData","songFeatures","acousticness","danceability","energy","instrumentalness","liveness","valence","speechiness","name","value","fill","actualBarData","setActualBarData","dummyBarData","barData","tempo","largo","adante","moderato","allegro","presto","setActualPieData","setDummyPieData","treeData","children","useEffect","treeMapData","key","push","size","timeSignatures","timeSignatureData","fakeData","graphStyle","titleStyle","Math","PI","onChange","isVisible","partialVisibility","offset","ResponsiveContainer","RadarChart","cx","cy","outerRadius","data","PolarGrid","PolarAngleAxis","dataKey","stroke","PolarRadiusAxis","angle","domain","Radar","fillOpacity","BarChart","Bar","XAxis","YAxis","Treemap","ratio","Tooltip","separator","formatter","unknown","payload","token","requests","getUsersProfile","callback","errorCallback","axios","get","headers","Authorization","access_token","then","response","status","Error","catch","error","getTopSongs","getTopArtists","getRecommendations","artistIDs","songIDs","SEED_ARTISTS","join","SEED_SONGS","ENDPOINT","getSongFeatures","ids","ID_PARAM","Main","isSongUpdateDone","isArtistUpdateDone","state","visible","accessToken","tokenType","expiresIn","isDataRetrieved","topArtistID","topSongID","isSampleAccount","handleLogin","SCOPE_PARAM","window","location","getParamsFromAuthentication","hash","substring","split","reduce","acc","val","handleSignout","setState","history","replaceState","showUserProfile","_showUserProfileCallback","_errorCallback","display_name","total","image","defaultIcon","images","length","href","showTopArtists","_showTopArtistsCallback","id","genres","items","url","calculatedTopGenres","calculateTopGenres","showRecommendations","showTopSongs","_showTopSongsCallback","artistName","album","artists","setTreeMapData","_showTopSongFeaturesCallback","durationMs","timeSignature","audio_features","duration_ms","time_signature","sum","max","min","durationAvg","occurrences","j","tempoFrequency","features","sortedTopGenres","Object","keys","sort","a","b","forEach","ind","_showRecommendationsCallback","songs","tracks","handleHome","handleTopSongs","handleTopArtists","handleTopGenres","handleRecommendations","handleVisuals","handleSampleAccount","aviciiImage","ledZeppelinImage","acdcImage","theSmashingPumpkinsImage","chuckBerryImage","whiteStripesImage","blink182Image","u2Image","theRollingStonesImage","calvinHarrisImage","duaLipaImage","marshmelloImage","hardwellImage","divineFitsImage","mgmtImage","deorroImage","gunNRosesImage","modestMouseImage","kidCudiImage","swedishHouseMafiaImage","this","paramInfo","token_type","expires_in","path","exact","component","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33ab00cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spotify_logo.21441016.png\";","import React from 'react';\r\nimport '../styles/login.css';\r\nimport spotifyIcon from '../images/spotify_logo.png';\r\n\r\nconst Login = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 100%)\",\r\n        height: \"100vh\",\r\n        margin: \"auto\",\r\n        position: \"absolute\",\r\n    }\r\n\r\n    const innerContainer = {\r\n        position: \"relative\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\"\r\n    }\r\n\r\n    const headerContainerStyle = {\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    const headerStyle1 = {\r\n        fontSize: \"100px\",\r\n        color: \"white\",\r\n        display:\"inline\"\r\n    }\r\n\r\n    const headerStyle2 = {\r\n        fontSize: \"100px\",\r\n        color: \"#1DB954\",\r\n        display:\"inline\"\r\n    }\r\n\r\n    const buttonContainer = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"50px\",\r\n    }\r\n\r\n    const logoStyle = {\r\n        width: \"35px\",\r\n        height: \"30px\",\r\n        paddingRight: \"5px\"\r\n    }\r\n\r\n    const buttonTextStyle = {\r\n        verticalAlign: \"middle\"\r\n    }\r\n\r\n    const signOutContainer = {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"50px\"\r\n    }\r\n\r\n    const sampleAccountContainer = {\r\n        textAlign: \"center\",\r\n        paddingTop:\"20px\",\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle}>\r\n            <div style={innerContainer}>\r\n                <div style={headerContainerStyle}>\r\n                    <h1 style={headerStyle1}>Spotify</h1>\r\n                    <h1 style={headerStyle2}>Stats</h1>\r\n                </div>\r\n                <div style={buttonContainer}>\r\n                    <button className=\"button\" onClick={props.login}>\r\n                        <img style={logoStyle} src={spotifyIcon} alt={\"Spotify Icon\"}/>\r\n                        <span style={buttonTextStyle}>Get Started</span>\r\n                    </button>\r\n                </div>\r\n                <div style={sampleAccountContainer}>\r\n                    <h6 className=\"sampleTitle\" onClick={props.sample}>Don't have a Spotify account? Use this sample account.</h6>\r\n                </div>\r\n                <div style={signOutContainer}>\r\n                    {props.isSignOut ? <h3 style={{color: \"#C8C8C8\"}}>Successfully Signed Out</h3> : null}\r\n                    {props.isNoData ? <h3 style={{color: \"#C8C8C8\"}}>Insufficient data in your spotify account.</h3> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport {FaBars} from 'react-icons/fa';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #1DB954;\r\n  }\r\n  &:hover {\r\n    color: #1DB954;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #1DB954;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n    text-decoration: none;\r\n  }\r\n`;","import React from 'react'\r\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink } from './NavbarElements' \r\n\r\nexport const Navbar = () => {\r\n    const headerStyle1 = {\r\n        fontSize: \"30px\",\r\n        color: \"white\",\r\n        display:\"inline\"\r\n    }\r\n\r\n    const headerStyle2 = {\r\n        fontSize: \"30px\",\r\n        color: \"#1DB954\",\r\n        display:\"inline\"\r\n    }\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavLink to=\"/spotify-stats\">\r\n                    <h1 style={headerStyle1}>Spotify</h1>\r\n                    <h1 style={headerStyle2}>Stats</h1>\r\n                </NavLink>\r\n                <Bars></Bars>\r\n                <NavMenu>\r\n                    <NavLink to=\"/spotify-stats/top-songs\" activeStyle>\r\n                        Top Songs\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/top-artists\" activeStyle>\r\n                        Top Artists\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/top-genres\" activeStyle>\r\n                        Top Genres\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/recommendations\" activeStyle>\r\n                        Recommendations\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/visuals\" activeStyle>\r\n                        Visuals\r\n                    </NavLink>\r\n                </NavMenu>\r\n                <NavBtn>\r\n                    <NavBtnLink to='/spotify-stats/sign-out'>Sign Out</NavBtnLink>\r\n                </NavBtn>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nexport const Home = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        height: \"100vh\",\r\n        // height: \"calc((100vw - 142px) / 2\",\r\n        margin: \"auto\",\r\n        position: \"absolute\",\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        height: \"25vh\",\r\n        justifyContent: \"center\",\r\n        position: \"relative\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const nameStyle = {\r\n        marginLeft: \"0%\",\r\n        marginTop: \"3%\",\r\n        width: \"30vw\"\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        border: \"none\"\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={songListStyle} >\r\n            {console.log(\"HOME\")}\r\n            <div style={songStyle}>\r\n                <div style={photoStyle}>\r\n                    <img src={props.userImage} alt={\"Profile\"} style={imageStyle}  />\r\n                </div>\r\n                <div style={nameStyle}>\r\n                <h3>{props.userName}</h3>\r\n                <h3 style={{color:\"#C8C8C8\"}}>Followers - {props.followers}</h3>\r\n                </div>\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../styles/topsongs.css';\r\n\r\nconst TopSongs = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\",\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n    }\r\n\r\n    const nameStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"column\",\r\n\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        backgroundColor:\"black\"\r\n    }\r\n\r\n    const photoInnerStyle = {\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    }\r\n\r\n    const subHeaderStyle = {\r\n        color:\"#C8C8C8\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={photoStyle}>\r\n                            <div style={photoInnerStyle}>\r\n                                <img src={props.topSongImages[i]} alt={\"artist\"} style={imageStyle} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={nameStyle} >\r\n                            <h3>{props.topSongNames[i]}</h3>\r\n                            <h3 style={subHeaderStyle}>By {props.topSongArtistName[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopSongs;","import React from 'react';\r\n\r\nconst TopArtists = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\",\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n    }\r\n\r\n    const nameStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"column\",\r\n\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\"\r\n    }\r\n\r\n    const photoInnerStyle = {\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    }\r\n\r\n    const subHeaderStyle = {\r\n        color:\"#C8C8C8\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={photoStyle}>\r\n                            <div style={photoInnerStyle}>\r\n                                <img src={props.topArtistImages[i]} alt={\"artist\"} style={imageStyle} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={nameStyle}>\r\n                            <h3>{props.topArtistNames[i]}</h3>\r\n                            <h3 style={subHeaderStyle}>Followers - {props.topArtistFollowers[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopArtists;","import React from 'react';\r\n\r\nconst TopGenres = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    // const photoStyle = {\r\n    //     width: \"30vw\",\r\n    //     paddingRight: \"50px\",\r\n    //     textAlign: \"right\"\r\n    // }\r\n\r\n    const nameStyle = {\r\n        marginLeft: \"0%\",\r\n        marginTop: \"3%\",\r\n        width: \"30vw\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={nameStyle}>\r\n                            <h3 >{props.topGenres[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TopGenres;","import React from 'react';\r\n\r\nconst TopRecommendations = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\",\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n    }\r\n\r\n    const nameStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"column\",\r\n\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        backgroundColor:\"black\"\r\n    }\r\n\r\n    const photoInnerStyle = {\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    }\r\n\r\n    const subHeaderStyle = {\r\n        color:\"#C8C8C8\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={photoStyle}>\r\n                            <div style={photoInnerStyle}>\r\n                                <img src={props.topRecommendationsImages[i]} alt={\"album\"} style={imageStyle} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={nameStyle}>\r\n                            <h3>{props.topRecommendations[i]}</h3>\r\n                            <h3 style={subHeaderStyle}>By {props.topRecommendationsArtistName[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopRecommendations;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/topsongs.css';\r\nimport '../styles/graph.css';\r\n// import { Radar } from 'react-chartjs-2';\r\nimport { Treemap, BarChart, Bar, XAxis, YAxis, Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Tooltip, LabelList, PieChart, Pie, Sector, Cell,RadialBarChart, RadialBar, Legend } from 'recharts';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\n\r\nconst Graphs = (props) => {\r\n\r\n    const [visibility, setVisibility] = useState(false);\r\n    const [barChartVisibility, setBarChartVisibility] = useState(false);\r\n    const [pieChartVisibility, setPieChartVisibility] = useState(false);\r\n    const [treeMapArray, setTreeMapArray] = useState([]);\r\n\r\n    const [test, setTest] = useState([]);\r\n\r\n    const [actualRadarData, setActualRadarData] = useState([\r\n        {\r\n            subject: 'Acousticness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Danceability',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Energy',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Instrumentalness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Liveness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Valence',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Speechiness',\r\n            A: 0,\r\n        },\r\n    ]);\r\n\r\n    let dummyRadarData = [\r\n        {\r\n            subject: 'Acousticness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Danceability',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Energy',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Instrumentalness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Liveness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Valence',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Speechiness',\r\n            A: 0,\r\n        },\r\n    ];\r\n\r\n    let radarData = [\r\n        {\r\n            subject: 'Acousticness',\r\n            A: props.songFeatures.acousticness,\r\n        },\r\n        {\r\n            subject: 'Danceability',\r\n            A: props.songFeatures.danceability,\r\n        },\r\n        {\r\n            subject: 'Energy',\r\n            A: props.songFeatures.energy,\r\n        },\r\n        {\r\n            subject: 'Instrumentalness',\r\n            A: props.songFeatures.instrumentalness,\r\n        },\r\n        {\r\n            subject: 'Liveness',\r\n            A: props.songFeatures.liveness,\r\n        },\r\n        {\r\n            subject: 'Valence',\r\n            A: props.songFeatures.valence,\r\n        },\r\n        {\r\n            subject: 'Speechiness',\r\n            A: props.songFeatures.speechiness,\r\n        },\r\n    ];\r\n\r\n    const [actualBarData, setActualBarData] = useState([\r\n        { name: 'largo', value: 0, fill: '#581845' },\r\n        { name: 'adante', value: 0, fill: '#900C3F' },\r\n        { name: 'moderato', value: 0, fill: '#C70039' },\r\n        { name: 'allegro', value: 0, fill: '#FF5733' },\r\n        { name: 'presto', value: 0, fill: '#FFC300' },\r\n    ]);\r\n\r\n    const dummyBarData = [\r\n        { name: 'largo', value: 0, fill: '#581845' },\r\n        { name: 'adante', value: 0, fill: '#900C3F' },\r\n        { name: 'moderato', value: 0, fill: '#C70039' },\r\n        { name: 'allegro', value: 0, fill: '#FF5733' },\r\n        { name: 'presto', value: 0, fill: '#FFC300' },\r\n    ];\r\n\r\n    const barData = [\r\n        { name: 'largo', value: props.tempo.largo, fill: '#581845' },\r\n        { name: 'adante', value: props.tempo.adante, fill: '#900C3F' },\r\n        { name: 'moderato', value: props.tempo.moderato, fill: '#C70039' },\r\n        { name: 'allegro', value: props.tempo.allegro, fill: '#FF5733' },\r\n        { name: 'presto', value: props.tempo.presto, fill: '#FFC300' },\r\n    ];\r\n\r\n    const [actualPieData, setActualPieData] = useState([]);\r\n\r\n\r\n    const [dummyPieData, setDummyPieData] = useState([]);\r\n\r\n    let pieData = [\r\n        \r\n    ]\r\n\r\n    const treeData = [\r\n        {\r\n          name: \"Artists\",\r\n          children: treeMapArray\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (props.treeMapData !== null) {\r\n            let children = [];\r\n            for (const key in props.treeMapData) {\r\n                children.push({name: \"\"+ key, size: props.treeMapData[key]});\r\n            }\r\n            setTreeMapArray(children);\r\n        }\r\n        if (props.songFeatures.timeSignatures !== null) {\r\n            let timeSignatureData = []\r\n            let fakeData = [];\r\n            for (const key in props.songFeatures.timeSignatures) {\r\n                timeSignatureData.push({name: \"\"+ key, value: props.songFeatures.timeSignatures[key]});\r\n                fakeData.push({name: \"\"+ key, value: 100});\r\n            }\r\n            setActualPieData(fakeData);\r\n            setDummyPieData(fakeData); \r\n            setTest(timeSignatureData);\r\n        }\r\n    }, []);\r\n\r\n    const graphStyle = {\r\n    //   width: \"700px\",\r\n    //   height:\"500px\",\r\n      width: \"90vh\",\r\n      height:\"90vh\",\r\n      margin: \"auto\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '90vh',\r\n    //   borderStyle: \"dotted\",\r\n    }\r\n\r\n    const titleStyle = {\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n\r\n\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"banner\">\r\n            <div className=\"container banner-align\">\r\n                \r\n                {/* radar chart */}\r\n                <div className=\"banner-hero\">\r\n                    <VisibilitySensor\r\n                        onChange={(isVisible) => {\r\n                        isVisible ? setActualRadarData(radarData) : setActualRadarData(dummyRadarData)\r\n                        setVisibility(isVisible)\r\n                        }}\r\n                        partialVisibility={true}\r\n                        offset={{ top: 450, }}\r\n                    >\r\n                        <div style={graphStyle}>\r\n                            <h2 style={{textAlign:\"center\"}}>Features</h2>\r\n                            <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>Based on your top 50 songs.</h5>\r\n                            <ResponsiveContainer width=\"100%\" height=\"100%\" >\r\n                                <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={actualRadarData}> \r\n                                    <PolarGrid />\r\n                                    <PolarAngleAxis dataKey=\"subject\" stroke=\"#fff\" />\r\n                                    <PolarRadiusAxis angle={38.6} domain={[0, 1]} />\r\n                                    <Radar name=\"Features\" dataKey=\"A\" stroke=\"#fff\" fill=\"#fff\" fillOpacity={0.4}   />\r\n                                </RadarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </VisibilitySensor>\r\n                </div>\r\n                \r\n                {/* pie chart\r\n                <div class=\"banner-hero\">\r\n                <VisibilitySensor\r\n                        onChange={(isVisible) => {\r\n                        console.log(\"PIECHART: \" + isVisible);\r\n                        console.log(\"DUMMY: \");\r\n                        console.log(dummyPieData);\r\n                        console.log(\"ACTUAL: \");\r\n                        console.log(actualPieData);\r\n                        console.log(\"PIEDATA: \");\r\n                        console.log(test);\r\n                        isVisible ? setActualPieData(test) : setActualPieData(dummyPieData)\r\n                        setPieChartVisibility(isVisible)\r\n                        // console.log(actualPieData);\r\n                        }}\r\n                        // containment={document.getElementById(\"testingDiv\")}  \r\n                        partialVisibility={true}\r\n                        isAnimationActive={false}\r\n                        // offset={{ top: 450, bottom: 800 }}\r\n                        offset={{ top: 450, }}\r\n                        // offset={{ top: \"0%\", bottom: \"0%\"}}\r\n                    >\r\n                    <div style={graphStyle}>\r\n                        <div style={titleStyle}>\r\n                            <h2 style={{textAlign:\"center\"}}>Time Signatures</h2>\r\n                            <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>See what your top time signatures are.</h5>\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                            <PieChart width={700} height={500}>\r\n                            <Pie\r\n                                data={actualPieData}\r\n                                cx=\"50%\"\r\n                                cy=\"30%\"\r\n                                labelLine={false}\r\n                                label={renderCustomizedLabel}\r\n                                outerRadius=\"50%\"\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                                animationDuration={4000}\r\n                                isAnimationActive={true}\r\n                            >\r\n                                {actualPieData.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))}\r\n                            </Pie>\r\n                            <Tooltip />\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    </VisibilitySensor>\r\n                </div> */}\r\n                \r\n                {/* bar chart */}\r\n                <div className=\"banner-hero\">\r\n                    <VisibilitySensor\r\n                        onChange={(isVisible) => {\r\n                        isVisible ? setActualBarData(barData) : setActualBarData(dummyBarData)\r\n                        setBarChartVisibility(isVisible)\r\n                        }}\r\n                        partialVisibility={true}\r\n                        offset={{ top: 450, }}\r\n                    >\r\n                        <div style={graphStyle}>\r\n                            <div style={titleStyle}>\r\n                                <h2 style={{textAlign:\"center\"}}>Tempo</h2>\r\n                                <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>View your favorite tempos.</h5>\r\n                            </div>\r\n                            <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n                                <BarChart width={700} height={500} data={actualBarData}>\r\n                                    <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                                    \r\n                                    <XAxis dataKey=\"name\" stroke=\"white\" />\r\n                                    <YAxis stroke=\"white\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </VisibilitySensor>\r\n                </div>\r\n                \r\n                {/* tree chart */}\r\n                <div className=\"banner-hero\">\r\n                    <div style={graphStyle}>\r\n                        <div style={titleStyle}>\r\n                            <h2 style={{textAlign:\"center\"}}>Artists</h2>\r\n                            <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>See which artists produce your most listened to songs.</h5>\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n                            <Treemap\r\n                                width={700}\r\n                                height={500}\r\n                                data={treeData}\r\n                                dataKey=\"size\"\r\n                                ratio={4 / 3}\r\n                                stroke=\"#fff\"\r\n                                fill=\"#8884d8\"\r\n                            >\r\n                            <Tooltip separator=\"\" formatter={(value, unknown, data) => data.payload.name + \" : \" + value + ((value > 1) ? \" songs\" : \" song\") }/>\r\n                            </Treemap>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    \r\n    );\r\n}\r\n\r\nexport default Graphs;","let token = {}\r\nexport default token","import axios from 'axios';\r\nimport token from './token';\r\n\r\nconst requests = {\r\n\r\n    getUsersProfile: (callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Users Profile!!!\");\r\n\r\n        const ENDPOINT = \"https://api.spotify.com/v1/me\";\r\n        let errorCode = 0;\r\n        \r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token.access_token,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n    },\r\n\r\n    // request top songs\r\n    getTopSongs: (callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Top Songs!!!\");\r\n\r\n        const ENDPOINT = \"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=100\";\r\n        let errorCode = 0;\r\n        \r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token.access_token,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n\r\n    },\r\n\r\n    // request top artists\r\n    getTopArtists: (callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Top Artists!!!\");\r\n\r\n        const ENDPOINT = \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=100\";\r\n        let errorCode = 0;\r\n        \r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token.access_token,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n\r\n    },\r\n\r\n    getRecommendations: (artistIDs, songIDs, callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Top Recommendations!!!\");\r\n\r\n        const SEED_ARTISTS = artistIDs.join(\",\");\r\n        const SEED_SONGS = songIDs.join(\",\");\r\n        const ENDPOINT = `https://api.spotify.com/v1/recommendations?limit=10&seed_artists=${SEED_ARTISTS}&seed_tracks=${SEED_SONGS}`;\r\n        let errorCode = 0;\r\n\r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token.access_token,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n\r\n    },\r\n\r\n    getSongFeatures: (ids, callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Song Features!!!\");\r\n        \r\n        const ID_PARAM = ids.join(\",\");\r\n        const ENDPOINT = `https://api.spotify.com/v1/audio-features?ids=${ID_PARAM}`;\r\n        let errorCode = 0;\r\n\r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token.access_token,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n    },\r\n\r\n}\r\n\r\nexport default requests;","export default __webpack_public_path__ + \"static/media/default_image.84681b68.jpg\";","export default __webpack_public_path__ + \"static/media/acdc.7bffd834.jpg\";","export default __webpack_public_path__ + \"static/media/chuck_berry.70535d15.jpg\";","export default __webpack_public_path__ + \"static/media/led_zeppelin.ff5a4c99.jpg\";","export default __webpack_public_path__ + \"static/media/avicii.212ee7ef.jpg\";","export default __webpack_public_path__ + \"static/media/blink_182.54ee9ee3.jpg\";","export default __webpack_public_path__ + \"static/media/white_stripes.4ac049c1.jpg\";","export default __webpack_public_path__ + \"static/media/the_smashing_pumpkins.3b18d7eb.jpg\";","export default __webpack_public_path__ + \"static/media/u2.7c4dc5b7.jpg\";","export default __webpack_public_path__ + \"static/media/rolling_stones.351b0107.jpg\";","export default __webpack_public_path__ + \"static/media/calvin_harris.25ec22ec.jpg\";","export default __webpack_public_path__ + \"static/media/dua_lipa.adbb848e.jpg\";","export default __webpack_public_path__ + \"static/media/hardwell.8d620018.jpg\";","export default __webpack_public_path__ + \"static/media/marshmello.dbdce1e8.jpg\";","export default __webpack_public_path__ + \"static/media/deorro.78daa41b.jpg\";","export default __webpack_public_path__ + \"static/media/divine_fits.47f1760a.jpg\";","export default __webpack_public_path__ + \"static/media/guns_n_roses.9e25baa3.jpg\";","export default __webpack_public_path__ + \"static/media/kid_cudi.aefaa2b8.jpg\";","export default __webpack_public_path__ + \"static/media/mgmt.211e9b24.jpg\";","export default __webpack_public_path__ + \"static/media/modest_mouse.da432739.jpg\";","export default __webpack_public_path__ + \"static/media/swedish_house_mafia.fcd82368.jpg\";","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \r\nimport Navbar from './navbar';\r\nimport Home from '../pages/Home';\r\nimport TopSongs from '../pages/TopSongs';\r\nimport TopArtists from '../pages/TopArtists';\r\nimport TopGenres from '../pages/TopGenres';\r\nimport TopRecommendations from '../pages/TopRecommendations';\r\nimport Graphs from '../pages/Graphs';\r\nimport requests from '../utilities/requests';\r\nimport defaultIcon from '../images/default_image.jpg';\r\nimport acdcImage from '../images/acdc.jpg';\r\nimport chuckBerryImage from '../images/chuck_berry.jpg';\r\nimport ledZeppelinImage from '../images/led_zeppelin.jpg';\r\nimport aviciiImage from '../images/avicii.jpg';\r\nimport blink182Image from '../images/blink_182.jpg';\r\nimport whiteStripesImage from '../images/white_stripes.jpg';\r\nimport theSmashingPumpkinsImage from '../images/the_smashing_pumpkins.jpg';\r\nimport u2Image from '../images/u2.jpg';\r\nimport theRollingStonesImage from '../images/rolling_stones.jpg';\r\nimport calvinHarrisImage from '../images/calvin_harris.jpg';\r\nimport duaLipaImage from '../images/dua_lipa.jpg';\r\nimport hardwellImage from '../images/hardwell.jpg';\r\nimport marshmelloImage from '../images/marshmello.jpg';\r\nimport deorroImage from '../images/deorro.jpg';\r\nimport divineFitsImage from '../images/divine_fits.jpg';\r\nimport gunNRosesImage from '../images/guns_n_roses.jpg';\r\nimport kidCudiImage from '../images/kid_cudi.jpg';\r\nimport mgmtImage from '../images/mgmt.jpg';\r\nimport modestMouseImage from '../images/modest_mouse.jpg';\r\nimport swedishHouseMafiaImage from '../images/swedish_house_mafia.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport token from '../utilities/token';\r\n\r\nclass Main extends Component {\r\n\r\n    isSongUpdateDone = false;\r\n    isArtistUpdateDone = false;\r\n    state = {\r\n        visible: true,\r\n        accessToken: \"\",\r\n        tokenType: \"\",\r\n        expiresIn: \"\",\r\n        data: {},\r\n        isSignOut: false,\r\n        userName: \"\",\r\n        followers: 0,\r\n        userImage: \"\",\r\n        isDataRetrieved: false,\r\n        topArtistNames: [],\r\n        topArtistImages: [],\r\n        topArtistID: [],\r\n        topArtistFollowers: [],\r\n        topSongNames: [],\r\n        topSongImages: [],\r\n        topSongID: [],\r\n        topSongArtistName: [],\r\n        topGenres: [],\r\n        topRecommendations: [],\r\n        topRecommendationsImages: [],\r\n        topRecommendationsArtistName: [],\r\n        songFeatures: {},\r\n        timeSignatures: {},\r\n        tempo: {},\r\n        treeMapData: {},\r\n        isNoData: false,\r\n        isSampleAccount: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.location.hash){\r\n            this.setState({visible: false});\r\n            const paramInfo = this.getParamsFromAuthentication(window.location.hash);\r\n            this.setState({\r\n                accessToken: paramInfo.access_token, \r\n                tokenType: paramInfo.token_type, \r\n                expiresIn: paramInfo.expires_in}\r\n            );\r\n            token.access_token = paramInfo.access_token;\r\n            token.token_type = paramInfo.token_type;\r\n            token.expires_in = paramInfo.expires_in;\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        // set up url for authentication\r\n        const ENDPOINT = \"https://accounts.spotify.com/authorize\";\r\n        const CLIENT_ID = \"f6914647e144472a9946eba5f87d9721\";\r\n        const RESPONSE_TYPE = \"token\";\r\n        const SHOW_DIALOG = \"true\";\r\n        const REDIRECT_URI = \"https://hrvojeperic.github.io/spotify-stats/\";\r\n        // const REDIRECT_URI = \"http://localhost:3000/spotify-stats/\";\r\n        const SCOPE = [\"user-top-read\", \"playlist-read-private\"];\r\n        const DELIMINATOR = \"%20\";\r\n        const SCOPE_PARAM = SCOPE.join(DELIMINATOR);\r\n        // redirect to spotify sign in\r\n        window.location = `${ENDPOINT}?client_id=${CLIENT_ID}&response_type=${RESPONSE_TYPE}&show_dialog=${SHOW_DIALOG}&redirect_uri=${REDIRECT_URI}&scope=${SCOPE_PARAM}`;\r\n    }\r\n\r\n    getParamsFromAuthentication = (hash) => {\r\n         let cleanHash = hash.substring(1);\r\n         let splitHash = cleanHash.split(\"&\");\r\n         const splitHashMore = splitHash.reduce((acc, val) => {\r\n             const [key, value] = val.split(\"=\");\r\n             acc[key] = value;\r\n             return acc;\r\n         }, {});\r\n        return splitHashMore;\r\n    }\r\n\r\n    handleSignout = () => {\r\n        this.setState({\r\n            visible: true,\r\n            isSignOut: true\r\n        })\r\n        window.history.replaceState(null, \"New Page Title\", \"/spotify-stats\")\r\n        return null;\r\n    }\r\n\r\n    showUserProfile = () => {\r\n        requests.getUsersProfile(this._showUserProfileCallback, this._errorCallback);\r\n    }\r\n\r\n    _showUserProfileCallback = (data) => {\r\n        let name = data.display_name;\r\n        let followers = data.followers.total;\r\n        let image = defaultIcon;\r\n        if (data.images.length !== 0) {\r\n            image = data.images[0].href;\r\n        }\r\n        this.setState({\r\n            userName: name,\r\n            followers: followers,\r\n            userImage: image\r\n        });\r\n    }\r\n\r\n    showTopArtists = () => {\r\n        requests.getTopArtists(this._showTopArtistsCallback, this._errorCallback);\r\n    }\r\n\r\n    _showTopArtistsCallback = (data) => {\r\n        let name = [];\r\n        let image = [];\r\n        let id = [];\r\n        let genres = [];\r\n        let followers = [];\r\n        if (data.items.length === 0) { // no data\r\n            this.setState({\r\n                isNoData: true\r\n            })\r\n        }\r\n        else {\r\n            for(let i = 0; i < data.items.length; i++) {\r\n                if (data.items[i].name != null) { // null checking\r\n                    name.push(data.items[i].name);\r\n                }\r\n                else {\r\n                    name.push(\"Unknown\");\r\n                }\r\n                if (data.items[i].images != null) { // null checking\r\n                    image.push(data.items[i].images[0].url);\r\n                }\r\n                else {\r\n                    // TODO: Push default artist image for null images\r\n                }\r\n                id.push(data.items[i].id);\r\n                genres.push(...data.items[i].genres);\r\n                followers.push(data.items[i].followers.total);\r\n            }\r\n            const calculatedTopGenres = this.calculateTopGenres(genres);\r\n            this.setState({\r\n                topArtistNames: name,\r\n                topArtistImages: image,\r\n                topArtistID: id,\r\n                topArtistFollowers: followers,\r\n                topGenres: calculatedTopGenres\r\n            }, () => {\r\n                this.isArtistUpdateDone = true;\r\n                this.showRecommendations(); \r\n            });\r\n        }\r\n    }\r\n\r\n    showTopSongs = () => {\r\n        requests.getTopSongs(this._showTopSongsCallback, this._errorCallback);\r\n    }\r\n\r\n    _showTopSongsCallback = (data) => {\r\n        let name = [];\r\n        let image = [];\r\n        let id = [];\r\n        let artistName = [];\r\n        if (data.items.length === 0) { // no data\r\n            this.setState({\r\n                isNoData: true\r\n            })\r\n        }\r\n        else {\r\n            for(let i = 0; i < data.items.length; i++) {\r\n                if (data.items[i].name != null) { // null checking\r\n                    name.push(data.items[i].name);      \r\n                }\r\n                else {\r\n                    name.push(\"Unknown\");\r\n                }\r\n                if (data.items[i].album.images != null) { // null checking\r\n                    image.push(data.items[i].album.images[0].url);\r\n                }\r\n                else {\r\n                    // TODO: Push default song image for null images\r\n                }\r\n                id.push(data.items[i].id);\r\n                artistName.push(data.items[i].album.artists[0].name);\r\n            }\r\n            this.setState({\r\n                topSongNames: name,\r\n                topSongImages: image,\r\n                topSongID: id,\r\n                topSongArtistName: artistName\r\n            }, () => {\r\n                this.isSongUpdateDone = true;\r\n                this.showRecommendations();\r\n                this.setTreeMapData(this.state.topSongArtistName);\r\n            });\r\n            requests.getSongFeatures(this.state.topSongID, this._showTopSongFeaturesCallback, this._errorCallback);\r\n        }\r\n    }\r\n\r\n    _showTopSongFeaturesCallback = (data) => {\r\n        let acousticness = 0;\r\n        let danceability = 0;\r\n        let energy = 0;\r\n        let instrumentalness = 0;\r\n        let liveness = 0;\r\n        let valence = 0;\r\n        let speechiness = 0;\r\n        let durationMs = [];\r\n        let timeSignature = [];\r\n        let tempo = [];\r\n        let length = data.audio_features.length;\r\n\r\n        for(let i = 0; i < length; i++) {\r\n            acousticness += data.audio_features[i].acousticness;\r\n            danceability += data.audio_features[i].danceability;\r\n            energy += data.audio_features[i].energy;\r\n            instrumentalness += data.audio_features[i].instrumentalness;\r\n            liveness += data.audio_features[i].liveness;\r\n            valence += data.audio_features[i].valence;\r\n            speechiness += data.audio_features[i].speechiness;\r\n            durationMs.push(data.audio_features[i].duration_ms);\r\n            timeSignature.push(data.audio_features[i].time_signature);\r\n            tempo.push(data.audio_features[i].tempo);\r\n\r\n        }\r\n\r\n        acousticness = acousticness / length;\r\n        danceability = danceability / length;\r\n        energy = energy / length;\r\n        instrumentalness = instrumentalness / length;\r\n        liveness = liveness / length;\r\n        valence = valence / length;\r\n        speechiness = speechiness / length;\r\n        \r\n        // calculate min, max, average of song durations\r\n        let sum = 0;\r\n        let max = durationMs[0];\r\n        let min = durationMs[0];\r\n        for (let i = 0; i < durationMs.length; i++) {\r\n            if (max < durationMs[i]) {\r\n                max = durationMs[i]\r\n            }\r\n            if (min > durationMs[i]) {\r\n                min = durationMs[i]\r\n            }\r\n            sum += durationMs[i];\r\n        }\r\n        max = max / 60000;\r\n        min = min / 60000;\r\n        sum = sum / 60000;\r\n        const durationAvg = sum / durationMs.length;\r\n\r\n        // calculate the number of each time signature\r\n        var occurrences = {};\r\n        for (var i = 0, j = timeSignature.length; i < j; i++) {\r\n            occurrences[timeSignature[i]] = (occurrences[timeSignature[i]] || 0) + 1;\r\n        }\r\n\r\n        // group tempo into Largo (0-76), Adante (77-108), Moderato (109-120), Allegro (121-168), Presto (169 - greater)\r\n        let tempoFrequency = {largo: 0, adante: 0, moderato: 0, allegro: 0, presto: 0};\r\n        for (let i = 0; i < tempo.length; i++) {\r\n            if (tempo[i] <= 76) { // slow\r\n                tempoFrequency.largo++\r\n            }\r\n            else if (tempo[i] <= 108) { // moderate\r\n                tempoFrequency.adante++\r\n            }\r\n            else if (tempo[i] <= 120) { // moderate\r\n                tempoFrequency.moderato++\r\n            }\r\n            else if (tempo[i] <= 168) { // moderate\r\n                tempoFrequency.allegro++\r\n            }\r\n            else { // fast\r\n                tempoFrequency.presto++\r\n            }\r\n        }\r\n        // tempo = tempoFrequency;\r\n        \r\n        const features = {\r\n                \"acousticness\": acousticness,\r\n                \"danceability\": danceability,\r\n                \"energy\": energy,\r\n                \"instrumentalness\": instrumentalness,\r\n                \"liveness\": liveness,\r\n                \"valence\": valence,\r\n                \"speechiness\": speechiness,\r\n                \"minDuration\": min,\r\n                \"maxDuration\": max,\r\n                \"avgDuration\": durationAvg,\r\n                \"timeSignatures\": occurrences\r\n        }\r\n        this.setState({\r\n            songFeatures: features,\r\n            tempo: tempoFrequency\r\n        })\r\n    }\r\n\r\n    calculateTopGenres = (genres) => {\r\n        var occurrences = {};\r\n        for (var i = 0, j = genres.length; i < j; i++) {\r\n            occurrences[genres[i]] = (occurrences[genres[i]] || 0) + 1;\r\n        }\r\n        console.log(genres);\r\n        let num = 10;\r\n        let sortedTopGenres = [];\r\n        if(num > Object.keys(occurrences).length){\r\n            return false;\r\n        };\r\n        Object.keys(occurrences).sort((a, b) => occurrences[b] - occurrences[a]).forEach((key, ind) =>\r\n        {\r\n            if(ind < num){\r\n                sortedTopGenres.push(key);\r\n            }\r\n        });\r\n        console.log(sortedTopGenres);\r\n        return sortedTopGenres;\r\n    }\r\n\r\n    showRecommendations = () => {\r\n        if (this.isSongUpdateDone && this.isArtistUpdateDone) {\r\n            let artistIDs = [];\r\n            let songIDs = [];\r\n            for (let i = 0; (i < this.state.topArtistID.length) &&  (i < 2); i++) {\r\n                artistIDs.push(this.state.topArtistID[i]);\r\n            }\r\n            for (let i = 0; (i < this.state.topSongID.length) &&  (i < 3); i++) {\r\n                songIDs.push(this.state.topSongID[i]);\r\n            }\r\n            requests.getRecommendations(artistIDs, songIDs, this._showRecommendationsCallback, this._errorCallback);\r\n        }\r\n        \r\n    }\r\n\r\n    _showRecommendationsCallback = (data) => {\r\n        let songs = [];\r\n        let images = [];\r\n        let artistName = [];\r\n        if (data.tracks.length === 0) { // no data\r\n            this.setState({\r\n                isNoData: true\r\n            })\r\n        }\r\n        else {\r\n            for(let i = 0; i < data.tracks.length; i++) {\r\n                songs.push(data.tracks[i].name);\r\n                images.push(data.tracks[i].album.images[0].url);\r\n                artistName.push(data.tracks[i].artists[0].name);\r\n            }\r\n            this.setState({\r\n                topRecommendations: songs,\r\n                topRecommendationsImages: images,\r\n                topRecommendationsArtistName: artistName\r\n            })\r\n        }\r\n    }\r\n\r\n    _errorCallback = () => {\r\n        // TODO: handle API errors on UI\r\n    }\r\n\r\n    setTreeMapData = (topSongArtistName) => {\r\n        var occurrences = {};\r\n        for (var i = 0, j = topSongArtistName.length; i < j; i++) {\r\n            occurrences[topSongArtistName[i]] = (occurrences[topSongArtistName[i]] || 0) + 1;\r\n        }\r\n        this.setState({\r\n            treeMapData: occurrences\r\n        });\r\n    }\r\n\r\n    handleHome = () => {\r\n        if (this.state.isDataRetrieved === false && this.state.isSampleAccount === false) {\r\n            this.setState({\r\n                isDataRetrieved: true\r\n            });\r\n            this.showUserProfile();\r\n            this.showTopSongs();\r\n            this.showTopArtists();\r\n            this.showRecommendations();\r\n        }\r\n        return <Home \r\n                    userName={this.state.userName}\r\n                    followers={this.state.followers}\r\n                    userImage={this.state.userImage}\r\n                />;\r\n    }\r\n\r\n    handleTopSongs = () => {      \r\n        return <TopSongs \r\n                    topSongNames={this.state.topSongNames}\r\n                    topSongImages={this.state.topSongImages}\r\n                    topSongArtistName={this.state.topSongArtistName}\r\n                />;\r\n    }\r\n\r\n    handleTopArtists = () => {\r\n        return <TopArtists \r\n                    topArtistNames={this.state.topArtistNames}\r\n                    topArtistImages={this.state.topArtistImages}\r\n                    topArtistFollowers={this.state.topArtistFollowers}\r\n                />;\r\n    }\r\n\r\n    handleTopGenres = () => {\r\n        return <TopGenres\r\n                    topGenres={this.state.topGenres}\r\n                />;\r\n    }\r\n\r\n    handleRecommendations = () => {\r\n        return <TopRecommendations\r\n                    topRecommendations={this.state.topRecommendations}\r\n                    topRecommendationsImages={this.state.topRecommendationsImages}\r\n                    topRecommendationsArtistName={this.state.topRecommendationsArtistName}\r\n                />;\r\n    }\r\n\r\n    handleVisuals = () => {\r\n        return <Graphs\r\n                    songFeatures={this.state.songFeatures}\r\n                    tempo={this.state.tempo != null ? this.state.tempo : {}}\r\n                    treeMapData={this.state.treeMapData}\r\n                />;\r\n    }\r\n\r\n    handleSampleAccount = () => {\r\n        // Create sample data\r\n        this.setState({\r\n            isSampleAccount: true,\r\n            visible: false,\r\n\r\n            userName: \"Steve Miller\",\r\n            followers: 7,\r\n            userImage: defaultIcon,\r\n\r\n            topSongNames: [\"Wake Me Up\", \"Ramble On\", \"Back In Black\", \"1979\", \"Stairway To Heaven\", \"Go Johnny Go\", \"Whole Lotta Love\", \"Seven Nation Army\", \"I Miss You\", \"What's My Age Again?\"],\r\n            topSongImages: [aviciiImage, ledZeppelinImage, acdcImage, theSmashingPumpkinsImage, ledZeppelinImage, chuckBerryImage, ledZeppelinImage, whiteStripesImage, blink182Image, blink182Image],\r\n            topSongArtistName: [\"Avicii\", \"Led Zeppelin\", \"AC/DC\", \"The Smashing Pumpkins\", \"Led Zeppelin\", \"Chuck Berry\", \"Led Zeppelin\", \"The White Stripes\", \"Blink-182\", \"Blink-182\"],\r\n\r\n            topArtistNames: [\"Led Zeppelin\", \"Blink-182\", \"Avicii\", \"AC/DC\", \"U2\", \"The Rolling Stones\", \"Calvin Harris\", \"Dua Lipa\", \"Marshmello\", \"Hardwell\"],\r\n            topArtistImages: [ledZeppelinImage, blink182Image, aviciiImage, acdcImage, u2Image, theRollingStonesImage, calvinHarrisImage, duaLipaImage, marshmelloImage, hardwellImage],\r\n            topArtistFollowers: [\"10,720,000\", \"31,753\", \"23,703,006\", \"19,210,000\", \"1,310,000\", \"2,140,000\", \"21,690,000\", \"25,280,000\", \"30,740,000\", \"3,438,881\"],\r\n\r\n            topGenres: [\"rock\", \"classic rock\", \"punk rock\", \"electronic dance music\", \"pop\", \"hard rock\", \"dance\", \"house\", \"alternative rock\", \"hip hop\"],\r\n            \r\n            topRecommendations: [\"Alone\", \"Slide\", \"Fool in the Rain\", \"Would That Not Be Nice\", \"Electric Feel\", \"Five Hours\", \"Welcome To The Jungle\", \"Float On\", \r\n                                \"Pursuit Of Happiness\", \"Don't You Worry Child\", ],\r\n            topRecommendationsImages: [marshmelloImage, calvinHarrisImage, ledZeppelinImage, divineFitsImage, mgmtImage, deorroImage, gunNRosesImage, modestMouseImage, kidCudiImage, swedishHouseMafiaImage],\r\n            topRecommendationsArtistName: [\"Marshmello\", \"Calvin Harris\", \"Led Zeppelin\", \"Divine Fits\", \"MGMT\", \"Deorro\", \"Guns N' Roses\", \"Modest Mouse\", \r\n                                            \"Kid Cudi\", \"Swedish House Mafia\"],\r\n\r\n            songFeatures: {\r\n                \"acousticness\": 0.1,\r\n                \"danceability\": 0.6,\r\n                \"energy\": 0.8,\r\n                \"instrumentalness\": 0.4,\r\n                \"liveness\": 0.8,\r\n                \"valence\": 0.6,\r\n                \"speechiness\": 0.4,\r\n                \"minDuration\": 2,\r\n                \"maxDuration\": 6,\r\n                \"avgDuration\": 3,\r\n                \"timeSignatures\": null\r\n            },\r\n            tempo: {largo: 1, adante: 10, moderato: 20, allegro: 15, presto: 5},\r\n            treeMapData: {\"Led Zeppelin\": 10, \"Blink-182\": 5, \"Avicii\": 6, \"AC/DC\": 2, \"U2\": 1, \"The Rolling Stones\": 1, \"Calvin Harris\":5 , \"Dua Lipa\": 2, \"Marshmello\": 4, \r\n                            \"Hardwell\":2, \"Drake\":1, \"Kanye West\":1, \"Sia\": 2, \"Kygo\":1, \"Divine Fits\": 1, \"Louis The Child\": 2, \"Crogotti\": 2, \"The Smashing Pumpkins\":1, \r\n                            \"The White Stripes\":1}\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.visible && !this.state.isNoData ? \r\n                <>\r\n                <Router> \r\n                    <Navbar/>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats' exact component={() => this.handleHome()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/top-songs' exact component={() => this.handleTopSongs()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/top-artists' exact component={() => this.handleTopArtists()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/top-genres' exact component={() => this.handleTopGenres()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/recommendations' exact component={() => this.handleRecommendations()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/visuals' exact component={() => this.handleVisuals()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/sign-out' exact component={() => this.handleSignout()} />\r\n                    </Switch>\r\n                </Router>\r\n                </> \r\n                : this.state.isNoData ? <Login login={() => this.handleLogin()} isNoData={this.state.isNoData}/>\r\n                : <Login login={() => this.handleLogin()} sample={() => this.handleSampleAccount()} isSignOut={this.state.isSignOut} isSampleAccount={this.state.isSampleAccount}/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Main;","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div>\n       <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}