{"version":3,"sources":["images/spotify_logo.png","components/Login.js","components/navbar/NavbarElements.js","components/navbar/index.js","pages/Home.js","pages/TopSongs.js","pages/TopArtists.js","pages/TopGenres.js","pages/TopRecommendations.js","pages/Graphs.js","utilities/requests.js","images/default_image.jpg","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","style","color","width","background","height","margin","position","top","transform","alignItems","justifyContent","textAlign","fontSize","display","paddingTop","className","onClick","login","paddingRight","src","spotifyIcon","alt","verticalAlign","isSignOut","isNoData","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","activeStyle","Home","fontFamily","userImage","borderRadius","border","marginLeft","marginTop","userName","followers","TopSongs","songStyle","minHeight","paddingBottom","photoStyle","nameStyle","alignContent","flexDirection","imageStyle","backgroundColor","photoInnerStyle","marginBottom","subHeaderStyle","Array","map","x","i","topSongImages","topSongNames","topSongArtistName","TopArtists","topArtistImages","topArtistNames","topArtistFollowers","TopGenres","topGenres","TopRecommendations","topRecommendationsImages","topRecommendations","topRecommendationsArtistName","Graphs","useState","setVisibility","setBarChartVisibility","treeMapArray","setTreeMapArray","setTest","subject","A","actualRadarData","setActualRadarData","dummyRadarData","radarData","songFeatures","acousticness","danceability","energy","instrumentalness","liveness","valence","speechiness","name","value","fill","actualBarData","setActualBarData","dummyBarData","barData","tempo","largo","adante","moderato","allegro","presto","setActualPieData","setDummyPieData","treeData","children","useEffect","treeMapData","key","push","size","timeSignatures","timeSignatureData","fakeData","graphStyle","titleStyle","Math","PI","onChange","isVisible","partialVisibility","offset","ResponsiveContainer","RadarChart","cx","cy","outerRadius","data","PolarGrid","PolarAngleAxis","dataKey","stroke","PolarRadiusAxis","angle","domain","Radar","fillOpacity","BarChart","Bar","XAxis","YAxis","Treemap","ratio","Tooltip","separator","formatter","unknown","payload","requests","getUsersProfile","callback","errorCallback","console","log","axios","get","headers","Authorization","localStorage","getItem","then","response","status","Error","catch","error","getTopSongs","getTopArtists","getRecommendations","artistIDs","songIDs","SEED_ARTISTS","join","SEED_SONGS","ENDPOINT","getSongFeatures","ids","ID_PARAM","Main","isSongUpdateDone","isArtistUpdateDone","state","visible","accessToken","tokenType","expiresIn","isDataRetrieved","topArtistID","topSongID","handleLogin","SCOPE_PARAM","window","location","getParamsFromAuthentication","hash","substring","split","reduce","acc","val","handleSignout","setState","showUserProfile","_showUserProfileCallback","_errorCallback","display_name","total","image","defaultIcon","images","length","href","showTopArtists","_showTopArtistsCallback","id","genres","items","url","calculatedTopGenres","calculateTopGenres","showRecommendations","showTopSongs","_showTopSongsCallback","artistName","album","artists","setTreeMapData","_showTopSongFeaturesCallback","durationMs","timeSignature","audio_features","duration_ms","time_signature","sum","max","min","durationAvg","occurrences","j","tempoFrequency","features","sortedTopGenres","Object","keys","sort","a","b","forEach","ind","_showRecommendationsCallback","songs","tracks","handleHome","handleTopSongs","handleTopArtists","handleTopGenres","handleRecommendations","handleVisuals","this","paramInfo","clear","access_token","token_type","expires_in","setItem","path","exact","component","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f6899f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spotify_logo.21441016.png\";","import React from 'react';\r\nimport '../styles/login.css';\r\nimport spotifyIcon from '../images/spotify_logo.png';\r\n\r\nconst Login = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 100%)\",\r\n        height: \"100vh\",\r\n        margin: \"auto\",\r\n        position: \"absolute\",\r\n    }\r\n\r\n    const innerContainer = {\r\n        position: \"relative\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\"\r\n    }\r\n\r\n    const headerContainerStyle = {\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    const headerStyle1 = {\r\n        fontSize: \"100px\",\r\n        color: \"white\",\r\n        display:\"inline\"\r\n    }\r\n\r\n    const headerStyle2 = {\r\n        fontSize: \"100px\",\r\n        color: \"#1DB954\",\r\n        display:\"inline\"\r\n    }\r\n\r\n    const buttonContainer = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"50px\",\r\n    }\r\n\r\n    const logoStyle = {\r\n        width: \"35px\",\r\n        height: \"30px\",\r\n        paddingRight: \"5px\"\r\n    }\r\n\r\n    const buttonTextStyle = {\r\n        verticalAlign: \"middle\"\r\n    }\r\n\r\n    const signOutContainer = {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"50px\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle}>\r\n            <div style={innerContainer}>\r\n                <div style={headerContainerStyle}>\r\n                    <h1 style={headerStyle1}>Spotify</h1>\r\n                    <h1 style={headerStyle2}>Stats</h1>\r\n                </div>\r\n                <div style={buttonContainer}>\r\n                    <button className=\"button\" onClick={props.login}>\r\n                        <img style={logoStyle} src={spotifyIcon} alt={\"Spotify Icon\"}/>\r\n                        <span style={buttonTextStyle}>Get Started</span>\r\n                    </button>\r\n                </div>\r\n                <div style={signOutContainer}>\r\n                    {props.isSignOut ? <h3 style={{color: \"#C8C8C8\"}}>Successfully Signed Out</h3> : null}\r\n                    {props.isNoData ? <h3 style={{color: \"#C8C8C8\"}}>Insufficient data in your spotify account.</h3> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport {FaBars} from 'react-icons/fa';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  z-index: 10;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #1DB954;\r\n  }\r\n  &:hover {\r\n    color: #1DB954;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #1DB954;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n    text-decoration: none;\r\n  }\r\n`;","import React from 'react'\r\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink } from './NavbarElements' \r\n\r\nexport const Navbar = () => {\r\n    const headerStyle1 = {\r\n        fontSize: \"30px\",\r\n        color: \"white\",\r\n        display:\"inline\"\r\n    }\r\n\r\n    const headerStyle2 = {\r\n        fontSize: \"30px\",\r\n        color: \"#1DB954\",\r\n        display:\"inline\"\r\n    }\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavLink to=\"/spotify-stats\">\r\n                    <h1 style={headerStyle1}>Spotify</h1>\r\n                    <h1 style={headerStyle2}>Stats</h1>\r\n                </NavLink>\r\n                <Bars></Bars>\r\n                <NavMenu>\r\n                    <NavLink to=\"/spotify-stats/top-songs\" activeStyle>\r\n                        Top Songs\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/top-artists\" activeStyle>\r\n                        Top Artists\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/top-genres\" activeStyle>\r\n                        Top Genres\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/recommendations\" activeStyle>\r\n                        Recommendations\r\n                    </NavLink>\r\n                    <NavLink to=\"/spotify-stats/visuals\" activeStyle>\r\n                        Visuals\r\n                    </NavLink>\r\n                </NavMenu>\r\n                <NavBtn>\r\n                    <NavBtnLink to='/spotify-stats/sign-out'>Sign Out</NavBtnLink>\r\n                </NavBtn>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nexport const Home = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        height: \"100vh\",\r\n        // height: \"calc((100vw - 142px) / 2\",\r\n        margin: \"auto\",\r\n        position: \"absolute\",\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        height: \"25vh\",\r\n        justifyContent: \"center\",\r\n        position: \"relative\",\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const nameStyle = {\r\n        marginLeft: \"0%\",\r\n        marginTop: \"3%\",\r\n        width: \"30vw\"\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        border: \"none\"\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={songListStyle} >\r\n        \r\n            <div style={songStyle}>\r\n                <div style={photoStyle}>\r\n                    <img src={props.userImage} alt={\"Profile\"} style={imageStyle}  />\r\n                </div>\r\n                <div style={nameStyle}>\r\n                <h3>{props.userName}</h3>\r\n                <h3 style={{color:\"#C8C8C8\"}}>Followers - {props.followers}</h3>\r\n                </div>\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../styles/topsongs.css';\r\n\r\nconst TopSongs = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\",\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n    }\r\n\r\n    const nameStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"column\",\r\n\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        backgroundColor:\"black\"\r\n    }\r\n\r\n    const photoInnerStyle = {\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    }\r\n\r\n    const subHeaderStyle = {\r\n        color:\"#C8C8C8\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={photoStyle}>\r\n                            <div style={photoInnerStyle}>\r\n                                <img src={props.topSongImages[i]} alt={\"artist\"} style={imageStyle} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={nameStyle} >\r\n                            <h3>{props.topSongNames[i]}</h3>\r\n                            <h3 style={subHeaderStyle}>By {props.topSongArtistName[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopSongs;","import React from 'react';\r\n\r\nconst TopArtists = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\",\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n    }\r\n\r\n    const nameStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"column\",\r\n\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\"\r\n    }\r\n\r\n    const photoInnerStyle = {\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    }\r\n\r\n    const subHeaderStyle = {\r\n        color:\"#C8C8C8\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={photoStyle}>\r\n                            <div style={photoInnerStyle}>\r\n                                <img src={props.topArtistImages[i]} alt={\"artist\"} style={imageStyle} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={nameStyle}>\r\n                            <h3>{props.topArtistNames[i]}</h3>\r\n                            <h3 style={subHeaderStyle}>Followers - {props.topArtistFollowers[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopArtists;","import React from 'react';\r\n\r\nconst TopGenres = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    // const photoStyle = {\r\n    //     width: \"30vw\",\r\n    //     paddingRight: \"50px\",\r\n    //     textAlign: \"right\"\r\n    // }\r\n\r\n    const nameStyle = {\r\n        marginLeft: \"0%\",\r\n        marginTop: \"3%\",\r\n        width: \"30vw\",\r\n        textAlign: \"center\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={nameStyle}>\r\n                            <h3 >{props.topGenres[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TopGenres;","import React from 'react';\r\n\r\nconst TopRecommendations = (props) => {\r\n\r\n    const songListStyle = {\r\n        color: \"#fff\",\r\n        width: \"100%\",\r\n        background: \"linear-gradient(#000000 0%, #0f6c30 40%, #1ed760 100%)\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"70px\",\r\n        paddingBottom: \"70px\"\r\n    }\r\n\r\n    const songStyle = {\r\n        display: \"flex\",\r\n        fontFamily: \"Montserrat, sans-serif\",\r\n        margin: \"0rem\",\r\n        minHeight: \"25vh\",\r\n        justifyContent: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n    const photoStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"right\",\r\n        position: \"relative\",\r\n        display: \"inline-flex\",\r\n    }\r\n\r\n    const nameStyle = {\r\n        width: \"30vw\",\r\n        paddingRight: \"50px\",\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"column\",\r\n\r\n    }\r\n\r\n    const imageStyle = {\r\n        background: \"gray\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        borderRadius: \"50%\",\r\n        backgroundColor:\"black\"\r\n    }\r\n\r\n    const photoInnerStyle = {\r\n        marginLeft: \"auto\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n    }\r\n\r\n    const subHeaderStyle = {\r\n        color:\"#C8C8C8\"\r\n    }\r\n\r\n    return (\r\n        <div style={songListStyle} >\r\n                {[...Array(10)].map((x, i) =>\r\n                    <div key={i} style={songStyle}>\r\n                        <div style={photoStyle}>\r\n                            <div style={photoInnerStyle}>\r\n                                <img src={props.topRecommendationsImages[i]} alt={\"album\"} style={imageStyle} />\r\n                            </div>\r\n                        </div>\r\n                        <div style={nameStyle}>\r\n                            <h3>{props.topRecommendations[i]}</h3>\r\n                            <h3 style={subHeaderStyle}>By {props.topRecommendationsArtistName[i]}</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopRecommendations;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/topsongs.css';\r\nimport '../styles/graph.css';\r\n// import { Radar } from 'react-chartjs-2';\r\nimport { Treemap, BarChart, Bar, XAxis, YAxis, Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Tooltip, LabelList, PieChart, Pie, Sector, Cell,RadialBarChart, RadialBar, Legend } from 'recharts';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\n\r\nconst Graphs = (props) => {\r\n\r\n    const [visibility, setVisibility] = useState(false);\r\n    const [barChartVisibility, setBarChartVisibility] = useState(false);\r\n    const [pieChartVisibility, setPieChartVisibility] = useState(false);\r\n    const [treeMapArray, setTreeMapArray] = useState([]);\r\n\r\n    const [test, setTest] = useState([]);\r\n\r\n    const [actualRadarData, setActualRadarData] = useState([\r\n        {\r\n            subject: 'Acousticness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Danceability',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Energy',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Instrumentalness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Liveness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Valence',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Speechiness',\r\n            A: 0,\r\n        },\r\n    ]);\r\n\r\n    let dummyRadarData = [\r\n        {\r\n            subject: 'Acousticness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Danceability',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Energy',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Instrumentalness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Liveness',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Valence',\r\n            A: 0,\r\n        },\r\n        {\r\n            subject: 'Speechiness',\r\n            A: 0,\r\n        },\r\n    ];\r\n\r\n    let radarData = [\r\n        {\r\n            subject: 'Acousticness',\r\n            A: props.songFeatures.acousticness,\r\n        },\r\n        {\r\n            subject: 'Danceability',\r\n            A: props.songFeatures.danceability,\r\n        },\r\n        {\r\n            subject: 'Energy',\r\n            A: props.songFeatures.energy,\r\n        },\r\n        {\r\n            subject: 'Instrumentalness',\r\n            A: props.songFeatures.instrumentalness,\r\n        },\r\n        {\r\n            subject: 'Liveness',\r\n            A: props.songFeatures.liveness,\r\n        },\r\n        {\r\n            subject: 'Valence',\r\n            A: props.songFeatures.valence,\r\n        },\r\n        {\r\n            subject: 'Speechiness',\r\n            A: props.songFeatures.speechiness,\r\n        },\r\n    ];\r\n\r\n    const [actualBarData, setActualBarData] = useState([\r\n        { name: 'largo', value: 0, fill: '#581845' },\r\n        { name: 'adante', value: 0, fill: '#900C3F' },\r\n        { name: 'moderato', value: 0, fill: '#C70039' },\r\n        { name: 'allegro', value: 0, fill: '#FF5733' },\r\n        { name: 'presto', value: 0, fill: '#FFC300' },\r\n    ]);\r\n\r\n    const dummyBarData = [\r\n        { name: 'largo', value: 0, fill: '#581845' },\r\n        { name: 'adante', value: 0, fill: '#900C3F' },\r\n        { name: 'moderato', value: 0, fill: '#C70039' },\r\n        { name: 'allegro', value: 0, fill: '#FF5733' },\r\n        { name: 'presto', value: 0, fill: '#FFC300' },\r\n    ];\r\n\r\n    const barData = [\r\n        { name: 'largo', value: props.tempo.largo, fill: '#581845' },\r\n        { name: 'adante', value: props.tempo.adante, fill: '#900C3F' },\r\n        { name: 'moderato', value: props.tempo.moderato, fill: '#C70039' },\r\n        { name: 'allegro', value: props.tempo.allegro, fill: '#FF5733' },\r\n        { name: 'presto', value: props.tempo.presto, fill: '#FFC300' },\r\n    ];\r\n\r\n    const [actualPieData, setActualPieData] = useState([]);\r\n\r\n\r\n    const [dummyPieData, setDummyPieData] = useState([]);\r\n\r\n    let pieData = [\r\n        \r\n    ]\r\n\r\n    const treeData = [\r\n        {\r\n          name: \"Artists\",\r\n          children: treeMapArray\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (props.treeMapData !== null) {\r\n            let children = [];\r\n            for (const key in props.treeMapData) {\r\n                children.push({name: \"\"+ key, size: props.treeMapData[key]});\r\n            }\r\n            setTreeMapArray(children);\r\n        }\r\n        if (props.songFeatures.timeSignatures !== null) {\r\n            let timeSignatureData = []\r\n            let fakeData = [];\r\n            for (const key in props.songFeatures.timeSignatures) {\r\n                timeSignatureData.push({name: \"\"+ key, value: props.songFeatures.timeSignatures[key]});\r\n                fakeData.push({name: \"\"+ key, value: 100});\r\n            }\r\n            setActualPieData(fakeData);\r\n            setDummyPieData(fakeData); \r\n            setTest(timeSignatureData);\r\n        }\r\n    }, []);\r\n\r\n    const graphStyle = {\r\n    //   width: \"700px\",\r\n    //   height:\"500px\",\r\n      width: \"90vh\",\r\n      height:\"90vh\",\r\n      margin: \"auto\",\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '90vh',\r\n    //   borderStyle: \"dotted\",\r\n    }\r\n\r\n    const titleStyle = {\r\n        paddingBottom: \"20px\"\r\n    }\r\n\r\n\r\n\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"banner\">\r\n            <div className=\"container banner-align\">\r\n                \r\n                {/* radar chart */}\r\n                <div className=\"banner-hero\">\r\n                    <VisibilitySensor\r\n                        onChange={(isVisible) => {\r\n                        isVisible ? setActualRadarData(radarData) : setActualRadarData(dummyRadarData)\r\n                        setVisibility(isVisible)\r\n                        }}\r\n                        partialVisibility={true}\r\n                        offset={{ top: 450, }}\r\n                    >\r\n                        <div style={graphStyle}>\r\n                            <h2 style={{textAlign:\"center\"}}>Features</h2>\r\n                            <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>Based on your top 50 songs.</h5>\r\n                            <ResponsiveContainer width=\"100%\" height=\"100%\" >\r\n                                <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={actualRadarData}> \r\n                                    <PolarGrid />\r\n                                    <PolarAngleAxis dataKey=\"subject\" stroke=\"#fff\" />\r\n                                    <PolarRadiusAxis angle={38.6} domain={[0, 1]} />\r\n                                    <Radar name=\"Features\" dataKey=\"A\" stroke=\"#fff\" fill=\"#fff\" fillOpacity={0.4}   />\r\n                                </RadarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </VisibilitySensor>\r\n                </div>\r\n                \r\n                {/* pie chart\r\n                <div class=\"banner-hero\">\r\n                <VisibilitySensor\r\n                        onChange={(isVisible) => {\r\n                        console.log(\"PIECHART: \" + isVisible);\r\n                        console.log(\"DUMMY: \");\r\n                        console.log(dummyPieData);\r\n                        console.log(\"ACTUAL: \");\r\n                        console.log(actualPieData);\r\n                        console.log(\"PIEDATA: \");\r\n                        console.log(test);\r\n                        isVisible ? setActualPieData(test) : setActualPieData(dummyPieData)\r\n                        setPieChartVisibility(isVisible)\r\n                        // console.log(actualPieData);\r\n                        }}\r\n                        // containment={document.getElementById(\"testingDiv\")}  \r\n                        partialVisibility={true}\r\n                        isAnimationActive={false}\r\n                        // offset={{ top: 450, bottom: 800 }}\r\n                        offset={{ top: 450, }}\r\n                        // offset={{ top: \"0%\", bottom: \"0%\"}}\r\n                    >\r\n                    <div style={graphStyle}>\r\n                        <div style={titleStyle}>\r\n                            <h2 style={{textAlign:\"center\"}}>Time Signatures</h2>\r\n                            <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>See what your top time signatures are.</h5>\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                            <PieChart width={700} height={500}>\r\n                            <Pie\r\n                                data={actualPieData}\r\n                                cx=\"50%\"\r\n                                cy=\"30%\"\r\n                                labelLine={false}\r\n                                label={renderCustomizedLabel}\r\n                                outerRadius=\"50%\"\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                                animationDuration={4000}\r\n                                isAnimationActive={true}\r\n                            >\r\n                                {actualPieData.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))}\r\n                            </Pie>\r\n                            <Tooltip />\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    </VisibilitySensor>\r\n                </div> */}\r\n                \r\n                {/* bar chart */}\r\n                <div className=\"banner-hero\">\r\n                    <VisibilitySensor\r\n                        onChange={(isVisible) => {\r\n                        isVisible ? setActualBarData(barData) : setActualBarData(dummyBarData)\r\n                        setBarChartVisibility(isVisible)\r\n                        }}\r\n                        partialVisibility={true}\r\n                        offset={{ top: 450, }}\r\n                    >\r\n                        <div style={graphStyle}>\r\n                            <div style={titleStyle}>\r\n                                <h2 style={{textAlign:\"center\"}}>Tempo</h2>\r\n                                <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>View your favorite tempos.</h5>\r\n                            </div>\r\n                            <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n                                <BarChart width={700} height={500} data={actualBarData}>\r\n                                    <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                                    \r\n                                    <XAxis dataKey=\"name\" stroke=\"white\" />\r\n                                    <YAxis stroke=\"white\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </VisibilitySensor>\r\n                </div>\r\n                \r\n                {/* tree chart */}\r\n                <div className=\"banner-hero\">\r\n                    <div style={graphStyle}>\r\n                        <div style={titleStyle}>\r\n                            <h2 style={{textAlign:\"center\"}}>Artists</h2>\r\n                            <h5 style={{textAlign:\"center\", color: \"#C8C8C8\"}}>See which artists produce your most listened to songs.</h5>\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n                            <Treemap\r\n                                width={700}\r\n                                height={500}\r\n                                data={treeData}\r\n                                dataKey=\"size\"\r\n                                ratio={4 / 3}\r\n                                stroke=\"#fff\"\r\n                                fill=\"#8884d8\"\r\n                            >\r\n                            <Tooltip separator=\"\" formatter={(value, unknown, data) => data.payload.name + \" : \" + value + ((value > 1) ? \" songs\" : \" song\") }/>\r\n                            </Treemap>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    \r\n    );\r\n}\r\n\r\nexport default Graphs;","import axios from 'axios';\r\n\r\nconst requests = {\r\n\r\n    getUsersProfile: (callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Users Profile!!!\");\r\n\r\n        const ENDPOINT = \"https://api.spotify.com/v1/me\";\r\n        let errorCode = 0;\r\n        \r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n    },\r\n\r\n    // request top songs\r\n    getTopSongs: (callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Top Songs!!!\");\r\n\r\n        const ENDPOINT = \"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=100\";\r\n        let errorCode = 0;\r\n        \r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n\r\n    },\r\n\r\n    // request top artists\r\n    getTopArtists: (callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Top Artists!!!\");\r\n\r\n        const ENDPOINT = \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=100\";\r\n        let errorCode = 0;\r\n        \r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n\r\n    },\r\n\r\n    getRecommendations: (artistIDs, songIDs, callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Top Recommendations!!!\");\r\n\r\n        const SEED_ARTISTS = artistIDs.join(\",\");\r\n        const SEED_SONGS = songIDs.join(\",\");\r\n        const ENDPOINT = `https://api.spotify.com/v1/recommendations?limit=10&seed_artists=${SEED_ARTISTS}&seed_tracks=${SEED_SONGS}`;\r\n        let errorCode = 0;\r\n\r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n\r\n    },\r\n\r\n    getSongFeatures: (ids, callback, errorCallback) => {\r\n\r\n        console.log(\"Getting Song Features!!!\");\r\n        \r\n        const ID_PARAM = ids.join(\",\");\r\n        const ENDPOINT = `https://api.spotify.com/v1/audio-features?ids=${ID_PARAM}`;\r\n        let errorCode = 0;\r\n\r\n        axios.get(ENDPOINT, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) { // check for errors\r\n                return response.data;\r\n            }\r\n            else {        \r\n                errorCode = response.status;\r\n                throw new Error(response.status);\r\n            }\r\n        })\r\n        .then((data) => {\r\n            callback(data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            errorCallback();\r\n        });\r\n    },\r\n\r\n}\r\n\r\nexport default requests;","export default __webpack_public_path__ + \"static/media/default_image.84681b68.jpg\";","import React, { Component } from 'react';\r\nimport Login from './Login';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \r\nimport Navbar from './navbar';\r\nimport Home from '../pages/Home';\r\nimport TopSongs from '../pages/TopSongs';\r\nimport TopArtists from '../pages/TopArtists';\r\nimport TopGenres from '../pages/TopGenres';\r\nimport TopRecommendations from '../pages/TopRecommendations';\r\nimport Graphs from '../pages/Graphs';\r\nimport requests from '../utilities/requests';\r\nimport defaultIcon from '../images/default_image.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Main extends Component {\r\n\r\n    isSongUpdateDone = false;\r\n    isArtistUpdateDone = false;\r\n    state = {\r\n        visible: true,\r\n        accessToken: \"\",\r\n        tokenType: \"\",\r\n        expiresIn: \"\",\r\n        data: {},\r\n        isSignOut: false,\r\n        userName: \"\",\r\n        followers: 0,\r\n        userImage: \"\",\r\n        isDataRetrieved: false,\r\n        topArtistNames: [],\r\n        topArtistImages: [],\r\n        topArtistID: [],\r\n        topArtistFollowers: [],\r\n        topSongNames: [],\r\n        topSongImages: [],\r\n        topSongID: [],\r\n        topSongArtistName: [],\r\n        topGenres: [],\r\n        topRecommendations: [],\r\n        topRecommendationsImages: [],\r\n        topRecommendationsArtistName: [],\r\n        songFeatures: {},\r\n        timeSignatures: {},\r\n        tempo: {},\r\n        treeMapData: {},\r\n        isNoData: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.location.hash){\r\n            this.setState({visible: false});\r\n            const paramInfo = this.getParamsFromAuthentication(window.location.hash);\r\n            localStorage.clear();\r\n            this.setState({\r\n                accessToken: paramInfo.access_token, \r\n                tokenType: paramInfo.token_type, \r\n                expiresIn: paramInfo.expires_in}\r\n            );\r\n            localStorage.setItem(\"accessToken\", paramInfo.access_token);\r\n            localStorage.setItem(\"tokenType\", paramInfo.token_type);\r\n            localStorage.setItem(\"expiresIn\", paramInfo.expires_in);\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        // set up url for authentication\r\n        const ENDPOINT = \"https://accounts.spotify.com/authorize\";\r\n        const CLIENT_ID = \"f6914647e144472a9946eba5f87d9721\";\r\n        const RESPONSE_TYPE = \"token\";\r\n        const SHOW_DIALOG = \"true\";\r\n        const REDIRECT_URI = \"https://hrvojeperic.github.io/spotify-stats/\";\r\n        const SCOPE = [\"user-top-read\", \"playlist-read-private\"];\r\n        const DELIMINATOR = \"%20\";\r\n        const SCOPE_PARAM = SCOPE.join(DELIMINATOR);\r\n        // redirect to spotify sign in\r\n        window.location = `${ENDPOINT}?client_id=${CLIENT_ID}&response_type=${RESPONSE_TYPE}&show_dialog=${SHOW_DIALOG}&redirect_uri=${REDIRECT_URI}&scope=${SCOPE_PARAM}`;\r\n    }\r\n\r\n    getParamsFromAuthentication = (hash) => {\r\n         let cleanHash = hash.substring(1);\r\n         let splitHash = cleanHash.split(\"&\");\r\n         const splitHashMore = splitHash.reduce((acc, val) => {\r\n             const [key, value] = val.split(\"=\");\r\n             acc[key] = value;\r\n             return acc;\r\n         }, {});\r\n        return splitHashMore;\r\n    }\r\n\r\n    handleSignout = () => {\r\n        this.setState({\r\n            visible: true,\r\n            isSignOut: true\r\n        })\r\n        return null;\r\n    }\r\n\r\n    showUserProfile = () => {\r\n        requests.getUsersProfile(this._showUserProfileCallback, this._errorCallback);\r\n    }\r\n\r\n    _showUserProfileCallback = (data) => {\r\n        let name = data.display_name;\r\n        let followers = data.followers.total;\r\n        let image = defaultIcon;\r\n        if (data.images.length !== 0) {\r\n            image = data.images[0].href;\r\n        }\r\n        this.setState({\r\n            userName: name,\r\n            followers: followers,\r\n            userImage: image\r\n        });\r\n    }\r\n\r\n    showTopArtists = () => {\r\n        requests.getTopArtists(this._showTopArtistsCallback, this._errorCallback);\r\n    }\r\n\r\n    _showTopArtistsCallback = (data) => {\r\n        let name = [];\r\n        let image = [];\r\n        let id = [];\r\n        let genres = [];\r\n        let followers = [];\r\n        if (data.items.length === 0) { // no data\r\n            this.setState({\r\n                isNoData: true\r\n            })\r\n        }\r\n        else {\r\n            for(let i = 0; i < data.items.length; i++) {\r\n                if (data.items[i].name != null) { // null checking\r\n                    name.push(data.items[i].name);\r\n                }\r\n                else {\r\n                    name.push(\"Unknown\");\r\n                }\r\n                if (data.items[i].images != null) { // null checking\r\n                    image.push(data.items[i].images[0].url);\r\n                }\r\n                else {\r\n                    // TODO: Push default artist image for null images\r\n                }\r\n                id.push(data.items[i].id);\r\n                genres.push(...data.items[i].genres);\r\n                followers.push(data.items[i].followers.total);\r\n            }\r\n            const calculatedTopGenres = this.calculateTopGenres(genres);\r\n            this.setState({\r\n                topArtistNames: name,\r\n                topArtistImages: image,\r\n                topArtistID: id,\r\n                topArtistFollowers: followers,\r\n                topGenres: calculatedTopGenres\r\n            }, () => {\r\n                this.isArtistUpdateDone = true;\r\n                this.showRecommendations(); \r\n            });\r\n        }\r\n    }\r\n\r\n    showTopSongs = () => {\r\n        requests.getTopSongs(this._showTopSongsCallback, this._errorCallback);\r\n    }\r\n\r\n    _showTopSongsCallback = (data) => {\r\n        let name = [];\r\n        let image = [];\r\n        let id = [];\r\n        let artistName = [];\r\n        if (data.items.length === 0) { // no data\r\n            this.setState({\r\n                isNoData: true\r\n            })\r\n        }\r\n        else {\r\n            for(let i = 0; i < data.items.length; i++) {\r\n                if (data.items[i].name != null) { // null checking\r\n                    name.push(data.items[i].name);      \r\n                }\r\n                else {\r\n                    name.push(\"Unknown\");\r\n                }\r\n                if (data.items[i].album.images != null) { // null checking\r\n                    image.push(data.items[i].album.images[0].url);\r\n                }\r\n                else {\r\n                    // TODO: Push default song image for null images\r\n                }\r\n                id.push(data.items[i].id);\r\n                artistName.push(data.items[i].album.artists[0].name);\r\n            }\r\n            this.setState({\r\n                topSongNames: name,\r\n                topSongImages: image,\r\n                topSongID: id,\r\n                topSongArtistName: artistName\r\n            }, () => {\r\n                this.isSongUpdateDone = true;\r\n                this.showRecommendations();\r\n                this.setTreeMapData(this.state.topSongArtistName);\r\n            });\r\n            requests.getSongFeatures(this.state.topSongID, this._showTopSongFeaturesCallback, this._errorCallback);\r\n        }\r\n    }\r\n\r\n    _showTopSongFeaturesCallback = (data) => {\r\n        let acousticness = 0;\r\n        let danceability = 0;\r\n        let energy = 0;\r\n        let instrumentalness = 0;\r\n        let liveness = 0;\r\n        let valence = 0;\r\n        let speechiness = 0;\r\n        let durationMs = [];\r\n        let timeSignature = [];\r\n        let tempo = [];\r\n        let length = data.audio_features.length;\r\n\r\n        for(let i = 0; i < length; i++) {\r\n            acousticness += data.audio_features[i].acousticness;\r\n            danceability += data.audio_features[i].danceability;\r\n            energy += data.audio_features[i].energy;\r\n            instrumentalness += data.audio_features[i].instrumentalness;\r\n            liveness += data.audio_features[i].liveness;\r\n            valence += data.audio_features[i].valence;\r\n            speechiness += data.audio_features[i].speechiness;\r\n            durationMs.push(data.audio_features[i].duration_ms);\r\n            timeSignature.push(data.audio_features[i].time_signature);\r\n            tempo.push(data.audio_features[i].tempo);\r\n\r\n        }\r\n\r\n        acousticness = acousticness / length;\r\n        danceability = danceability / length;\r\n        energy = energy / length;\r\n        instrumentalness = instrumentalness / length;\r\n        liveness = liveness / length;\r\n        valence = valence / length;\r\n        speechiness = speechiness / length;\r\n        \r\n        // calculate min, max, average of song durations\r\n        let sum = 0;\r\n        let max = durationMs[0];\r\n        let min = durationMs[0];\r\n        for (let i = 0; i < durationMs.length; i++) {\r\n            if (max < durationMs[i]) {\r\n                max = durationMs[i]\r\n            }\r\n            if (min > durationMs[i]) {\r\n                min = durationMs[i]\r\n            }\r\n            sum += durationMs[i];\r\n        }\r\n        max = max / 60000;\r\n        min = min / 60000;\r\n        sum = sum / 60000;\r\n        const durationAvg = sum / durationMs.length;\r\n\r\n        // calculate the number of each time signature\r\n        var occurrences = {};\r\n        for (var i = 0, j = timeSignature.length; i < j; i++) {\r\n            occurrences[timeSignature[i]] = (occurrences[timeSignature[i]] || 0) + 1;\r\n        }\r\n\r\n        // group tempo into Largo (0-76), Adante (77-108), Moderato (109-120), Allegro (121-168), Presto (169 - greater)\r\n        let tempoFrequency = {largo: 0, adante: 0, moderato: 0, allegro: 0, presto: 0};\r\n        for (let i = 0; i < tempo.length; i++) {\r\n            if (tempo[i] <= 76) { // slow\r\n                tempoFrequency.largo++\r\n            }\r\n            else if (tempo[i] <= 108) { // moderate\r\n                tempoFrequency.adante++\r\n            }\r\n            else if (tempo[i] <= 120) { // moderate\r\n                tempoFrequency.moderato++\r\n            }\r\n            else if (tempo[i] <= 168) { // moderate\r\n                tempoFrequency.allegro++\r\n            }\r\n            else { // fast\r\n                tempoFrequency.presto++\r\n            }\r\n        }\r\n        // tempo = tempoFrequency;\r\n        \r\n        const features = {\r\n                \"acousticness\": acousticness,\r\n                \"danceability\": danceability,\r\n                \"energy\": energy,\r\n                \"instrumentalness\": instrumentalness,\r\n                \"liveness\": liveness,\r\n                \"valence\": valence,\r\n                \"speechiness\": speechiness,\r\n                \"minDuration\": min,\r\n                \"maxDuration\": max,\r\n                \"avgDuration\": durationAvg,\r\n                \"timeSignatures\": occurrences\r\n        }\r\n        this.setState({\r\n            songFeatures: features,\r\n            tempo: tempoFrequency\r\n        })\r\n    }\r\n\r\n    calculateTopGenres = (genres) => {\r\n        var occurrences = {};\r\n        for (var i = 0, j = genres.length; i < j; i++) {\r\n            occurrences[genres[i]] = (occurrences[genres[i]] || 0) + 1;\r\n        }\r\n        console.log(genres);\r\n        let num = 10;\r\n        let sortedTopGenres = [];\r\n        if(num > Object.keys(occurrences).length){\r\n            return false;\r\n        };\r\n        Object.keys(occurrences).sort((a, b) => occurrences[b] - occurrences[a]).forEach((key, ind) =>\r\n        {\r\n            if(ind < num){\r\n                sortedTopGenres.push(key);\r\n            }\r\n        });\r\n        console.log(sortedTopGenres);\r\n        return sortedTopGenres;\r\n    }\r\n\r\n    showRecommendations = () => {\r\n        if (this.isSongUpdateDone && this.isArtistUpdateDone) {\r\n            let artistIDs = [];\r\n            let songIDs = [];\r\n            for (let i = 0; (i < this.state.topArtistID.length) &&  (i < 2); i++) {\r\n                artistIDs.push(this.state.topArtistID[i]);\r\n            }\r\n            for (let i = 0; (i < this.state.topSongID.length) &&  (i < 3); i++) {\r\n                songIDs.push(this.state.topSongID[i]);\r\n            }\r\n            requests.getRecommendations(artistIDs, songIDs, this._showRecommendationsCallback, this._errorCallback);\r\n        }\r\n        \r\n    }\r\n\r\n    _showRecommendationsCallback = (data) => {\r\n        let songs = [];\r\n        let images = [];\r\n        let artistName = [];\r\n        if (data.tracks.length === 0) { // no data\r\n            this.setState({\r\n                isNoData: true\r\n            })\r\n        }\r\n        else {\r\n            for(let i = 0; i < data.tracks.length; i++) {\r\n                songs.push(data.tracks[i].name);\r\n                images.push(data.tracks[i].album.images[0].url);\r\n                artistName.push(data.tracks[i].artists[0].name);\r\n            }\r\n            this.setState({\r\n                topRecommendations: songs,\r\n                topRecommendationsImages: images,\r\n                topRecommendationsArtistName: artistName\r\n            })\r\n        }\r\n    }\r\n\r\n    _errorCallback = () => {\r\n        // TODO: handle API errors on UI\r\n    }\r\n\r\n    setTreeMapData = (topSongArtistName) => {\r\n        // console.log(topSongArtistName)\r\n        var occurrences = {};\r\n        for (var i = 0, j = topSongArtistName.length; i < j; i++) {\r\n            occurrences[topSongArtistName[i]] = (occurrences[topSongArtistName[i]] || 0) + 1;\r\n        }\r\n        // console.log(occurrences)\r\n        this.setState({\r\n            treeMapData: occurrences\r\n        });\r\n    }\r\n\r\n    handleHome = () => {\r\n        if (this.state.isDataRetrieved === false) {\r\n            this.setState({\r\n                isDataRetrieved: true\r\n            });\r\n            this.showUserProfile();\r\n            this.showTopSongs();\r\n            this.showTopArtists();\r\n            this.showRecommendations();\r\n        }\r\n        return <Home \r\n                    userName={this.state.userName}\r\n                    followers={this.state.followers}\r\n                    userImage={this.state.userImage}\r\n                />;\r\n    }\r\n\r\n    handleTopSongs = () => {\r\n        return <TopSongs \r\n                    topSongNames={this.state.topSongNames}\r\n                    topSongImages={this.state.topSongImages}\r\n                    topSongArtistName={this.state.topSongArtistName}\r\n                />;\r\n    }\r\n\r\n    handleTopArtists = () => {\r\n        return <TopArtists \r\n                    topArtistNames={this.state.topArtistNames}\r\n                    topArtistImages={this.state.topArtistImages}\r\n                    topArtistFollowers={this.state.topArtistFollowers}\r\n                />;\r\n    }\r\n\r\n    handleTopGenres = () => {\r\n        return <TopGenres \r\n                    topGenres={this.state.topGenres}\r\n                />;\r\n    }\r\n\r\n    handleRecommendations = () => {\r\n        return <TopRecommendations \r\n                    topRecommendations={this.state.topRecommendations}\r\n                    topRecommendationsImages={this.state.topRecommendationsImages}\r\n                    topRecommendationsArtistName={this.state.topRecommendationsArtistName}\r\n                />;\r\n    }\r\n\r\n    handleVisuals = () => {\r\n        return <Graphs \r\n                    songFeatures={this.state.songFeatures}\r\n                    tempo={this.state.tempo != null ? this.state.tempo : {}}\r\n                    treeMapData={this.state.treeMapData}\r\n                />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.visible && !this.state.isNoData ? \r\n                <>\r\n                <Router> \r\n                    <Navbar/>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats' exact component={() => this.handleHome()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/top-songs' exact component={() => this.handleTopSongs()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/top-artists' exact component={() => this.handleTopArtists()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/top-genres' exact component={() => this.handleTopGenres()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/recommendations' exact component={() => this.handleRecommendations()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/visuals' exact component={() => this.handleVisuals()} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/spotify-stats/sign-out' exact component={() => this.handleSignout()} />\r\n                    </Switch>\r\n                </Router>\r\n                </> \r\n                : this.state.isNoData ? <Login login={() => this.handleLogin()} isNoData={this.state.isNoData}/>\r\n                : <Login login={() => this.handleLogin()} isSignOut={this.state.isSignOut}/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Main;","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div>\n       <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}